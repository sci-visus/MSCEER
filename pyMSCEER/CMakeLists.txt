#CMakeLists.txt
cmake_minimum_required (VERSION 3.8)

set(CMAKE_VERBOSE_MAKEFILE 1)

#add_executable(Tutorial tutorial.cpp)
set(HEADER_FILES ${CMAKE_CURRENT_SOURCE_DIR}/pymsceer.h)
add_library(Pymsceer pymsceer.cpp ${HEADER_FILES})
target_link_libraries(Pymsceer PRIVATE testlibA msceer)

FIND_PACKAGE(SWIG REQUIRED)
INCLUDE(${SWIG_USE_FILE})

FIND_PACKAGE(PythonLibs)
INCLUDE_DIRECTORIES(${PYTHON_INCLUDE_PATH})
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})

SET(CMAKE_SWIG_FLAGS "-Wall")

SET(SWIG_MODULE_pymsceer_EXTRA_DEPS 
  Pymsceer
  testlibA
  msceer
)
SET_SOURCE_FILES_PROPERTIES(pymsceer.i PROPERTIES CPLUSPLUS ON)
SET_PROPERTY(SOURCE pymsceer.i PROPERTY SWIG_FLAGS "-builtin")

GET_PROPERTY(INCLUDE_DIRS TARGET msceer PROPERTY INCLUDE_DIRECTORIES)

message(STATUS "SWIG using directories:" ${INCLUDE_DIRS})

INCLUDE_DIRECTORIES(${INCLUDE_DIRS})
SWIG_ADD_LIBRARY(pymsceer TYPE MODULE LANGUAGE python 
		SOURCES 
			pymsceer.i 
			pymsceer.h  
			pymsceer.cpp)
set_property(TARGET ${SWIG_MODULE_pymsceer_REAL_NAME} PROPERTY SWIG_USE_LIBRARY_INCLUDE_DIRECTORIES TRUE)
SWIG_LINK_LIBRARIES(pymsceer ${PYTHON_LIBRARIES} msceer)


install(TARGETS ${SWIG_MODULE_pymsceer_REAL_NAME} DESTINATION test_install)
install(FILES ${CMAKE_CURRENT_BINARY_DIR}/pymsceer.py DESTINATION test_install) 